# Generated by Django 5.0.2 on 2025-07-07 19:27

from django.db import migrations, models


def convert_player_count_and_duration(apps, schema_editor):
    """Convert existing player_count and duration values to new format"""
    Game = apps.get_model('games', 'Game')
    
    # Player count mapping from old to new format
    player_count_mapping = {
        '1-2': '2',
        '3-4': '3+',
        '5-6': '5+',
        '7-8': '5+',
        '9-10': '10+',
        '11-12': '10+',
        '13+': '15+',
        'any': 'any',
    }
    
    # Duration mapping from old to new format
    duration_mapping = {
        '5min': '5min',
        '10min': '15min',  # Closest available
        '15min': '15min',
        '20min': '15min',  # Closest available
        '30min': '30min',
        '45min': '45min',
        '60min': '60min',
        '90min': '60min',  # Closest available
        '120min': '60min',  # Closest available
        '10+min': '15min',  # Closest available
        '15+min': '15min',
        '20+min': '15min',  # Closest available
        '30+min': '30min',
    }
    
    # Update all games
    for game in Game.objects.all():
        # Convert player_count
        if game.player_count in player_count_mapping:
            game.player_count = player_count_mapping[game.player_count]
        
        # Convert duration
        if game.duration in duration_mapping:
            game.duration = duration_mapping[game.duration]
        
        game.save()


def reverse_convert_player_count_and_duration(apps, schema_editor):
    """Reverse conversion - not perfect but provides a reasonable fallback"""
    Game = apps.get_model('games', 'Game')
    
    # Reverse mapping (approximate)
    player_count_reverse = {
        '1': '1-2',
        '2': '1-2',
        '3+': '3-4',
        '5+': '5-6',
        '10+': '9-10',
        '15+': '13+',
        'any': 'any',
    }
    
    duration_reverse = {
        '5min': '5min',
        '15min': '15min',
        '30min': '30min',
        '45min': '45min',
        '60min': '60min',
    }
    
    for game in Game.objects.all():
        if game.player_count in player_count_reverse:
            game.player_count = player_count_reverse[game.player_count]
        
        if game.duration in duration_reverse:
            game.duration = duration_reverse[game.duration]
        
        game.save()


class Migration(migrations.Migration):

    dependencies = [
        ('games', '0006_migrate_language_data'),
    ]

    operations = [
        migrations.AlterField(
            model_name='game',
            name='duration',
            field=models.CharField(choices=[('5min', '5 minutes'), ('15min', '15 minutes'), ('30min', '30 minutes'), ('45min', '45 minutes'), ('60min', '60 minutes')], max_length=10),
        ),
        migrations.AlterField(
            model_name='game',
            name='player_count',
            field=models.CharField(choices=[('1', '1 player'), ('2', '2 players'), ('3+', '3+ players'), ('5+', '5+ players'), ('10+', '10+ players'), ('15+', '15+ players'), ('any', 'Any number')], max_length=10),
        ),
        migrations.RunPython(
            convert_player_count_and_duration,
            reverse_convert_player_count_and_duration,
        ),
    ]
